# -*- coding: utf-8 -*-
# CopyrightÂ© 2017-2023 Quantum Interface (quantuminterface@ipe.kit.edu)
# Richard Gebauer, IPE, Karlsruhe Institute of Technology
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: taskrunner.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x10taskrunner.proto\x12\ntaskrunner"\x07\n\x05\x45mpty"\xba\x01\n\x0bStatusReply\x12\x0f\n\x07\x63hip_id\x18\x01 \x01(\r\x12\x15\n\rfirmware_hash\x18\x02 \x01(\t\x12\x12\n\nbuild_date\x18\x03 \x01(\t\x12\x14\n\x0c\x62uild_commit\x18\x04 \x01(\t\x12\x11\n\ttask_name\x18\x05 \x01(\t\x12\x12\n\ntask_state\x18\x06 \x01(\r\x12\x15\n\rtask_progress\x18\x07 \x01(\r\x12\x1b\n\x13\x64\x61taboxes_available\x18\x08 \x01(\r"\x88\x01\n\x0eTaskStateReply\x12\x0c\n\x04\x62usy\x18\x01 \x01(\x08\x12\x0c\n\x04\x64one\x18\x02 \x01(\x08\x12\x0e\n\x06loaded\x18\x03 \x01(\x08\x12\x0f\n\x07looping\x18\x04 \x01(\x08\x12\x1b\n\x13\x65rror_msg_available\x18\x05 \x01(\x08\x12\x1c\n\x14\x65rror_msg_queue_full\x18\x06 \x01(\x08"0\n\x11\x44\x61taboxReplyINT32\x12\r\n\x05index\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x05"1\n\x12\x44\x61taboxReplyUINT32\x12\r\n\x05index\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\r"0\n\x11\x44\x61taboxReplyINT64\x12\r\n\x05index\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x03"1\n\x12\x44\x61taboxReplyUINT64\x12\r\n\x05index\x18\x01 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\x02 \x03(\x04",\n\x19GetTaskErrorMessagesReply\x12\x0f\n\x07message\x18\x01 \x03(\t"&\n\x10ParameterRequest\x12\x12\n\nparameters\x18\x01 \x03(\x05"9\n\x10StartTaskRequest\x12\x0f\n\x07looping\x18\x01 \x01(\x08\x12\x14\n\x0cstop_running\x18\x02 \x01(\x08" \n\x0fStopTaskRequest\x12\r\n\x05reset\x18\x01 \x01(\x08"0\n\x12ProgramTaskRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04task\x18\x02 \x01(\x0c\x32\xd0\t\n\x11TaskRunnerService\x12\x39\n\tGetStatus\x12\x11.taskrunner.Empty\x1a\x17.taskrunner.StatusReply"\x00\x12?\n\x0cGetTaskState\x12\x11.taskrunner.Empty\x1a\x1a.taskrunner.TaskStateReply"\x00\x12\x41\n\x0cSetParameter\x12\x1c.taskrunner.ParameterRequest\x1a\x11.taskrunner.Empty"\x00\x12\x42\n\x0bProgramTask\x12\x1e.taskrunner.ProgramTaskRequest\x1a\x11.taskrunner.Empty"\x00\x12\x42\n\x0b\x43ompileTask\x12\x1e.taskrunner.ProgramTaskRequest\x1a\x11.taskrunner.Empty"\x00\x12>\n\tStartTask\x12\x1c.taskrunner.StartTaskRequest\x1a\x11.taskrunner.Empty"\x00\x12<\n\x08StopTask\x12\x1b.taskrunner.StopTaskRequest\x1a\x11.taskrunner.Empty"\x00\x12\x44\n\x0cGetDataboxes\x12\x11.taskrunner.Empty\x1a\x1d.taskrunner.DataboxReplyINT32"\x00\x30\x01\x12H\n\x10GetDataboxesINT8\x12\x11.taskrunner.Empty\x1a\x1d.taskrunner.DataboxReplyINT32"\x00\x30\x01\x12J\n\x11GetDataboxesUINT8\x12\x11.taskrunner.Empty\x1a\x1e.taskrunner.DataboxReplyUINT32"\x00\x30\x01\x12I\n\x11GetDataboxesINT16\x12\x11.taskrunner.Empty\x1a\x1d.taskrunner.DataboxReplyINT32"\x00\x30\x01\x12K\n\x12GetDataboxesUINT16\x12\x11.taskrunner.Empty\x1a\x1e.taskrunner.DataboxReplyUINT32"\x00\x30\x01\x12I\n\x11GetDataboxesINT32\x12\x11.taskrunner.Empty\x1a\x1d.taskrunner.DataboxReplyINT32"\x00\x30\x01\x12K\n\x12GetDataboxesUINT32\x12\x11.taskrunner.Empty\x1a\x1e.taskrunner.DataboxReplyUINT32"\x00\x30\x01\x12I\n\x11GetDataboxesINT64\x12\x11.taskrunner.Empty\x1a\x1d.taskrunner.DataboxReplyINT64"\x00\x30\x01\x12K\n\x12GetDataboxesUINT64\x12\x11.taskrunner.Empty\x1a\x1e.taskrunner.DataboxReplyUINT64"\x00\x30\x01\x12R\n\x14GetTaskErrorMessages\x12\x11.taskrunner.Empty\x1a%.taskrunner.GetTaskErrorMessagesReply"\x00\x62\x06proto3'
)


_EMPTY = DESCRIPTOR.message_types_by_name["Empty"]
_STATUSREPLY = DESCRIPTOR.message_types_by_name["StatusReply"]
_TASKSTATEREPLY = DESCRIPTOR.message_types_by_name["TaskStateReply"]
_DATABOXREPLYINT32 = DESCRIPTOR.message_types_by_name["DataboxReplyINT32"]
_DATABOXREPLYUINT32 = DESCRIPTOR.message_types_by_name["DataboxReplyUINT32"]
_DATABOXREPLYINT64 = DESCRIPTOR.message_types_by_name["DataboxReplyINT64"]
_DATABOXREPLYUINT64 = DESCRIPTOR.message_types_by_name["DataboxReplyUINT64"]
_GETTASKERRORMESSAGESREPLY = DESCRIPTOR.message_types_by_name[
    "GetTaskErrorMessagesReply"
]
_PARAMETERREQUEST = DESCRIPTOR.message_types_by_name["ParameterRequest"]
_STARTTASKREQUEST = DESCRIPTOR.message_types_by_name["StartTaskRequest"]
_STOPTASKREQUEST = DESCRIPTOR.message_types_by_name["StopTaskRequest"]
_PROGRAMTASKREQUEST = DESCRIPTOR.message_types_by_name["ProgramTaskRequest"]
Empty = _reflection.GeneratedProtocolMessageType(
    "Empty",
    (_message.Message,),
    {
        "DESCRIPTOR": _EMPTY,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.Empty)
    },
)
_sym_db.RegisterMessage(Empty)

StatusReply = _reflection.GeneratedProtocolMessageType(
    "StatusReply",
    (_message.Message,),
    {
        "DESCRIPTOR": _STATUSREPLY,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.StatusReply)
    },
)
_sym_db.RegisterMessage(StatusReply)

TaskStateReply = _reflection.GeneratedProtocolMessageType(
    "TaskStateReply",
    (_message.Message,),
    {
        "DESCRIPTOR": _TASKSTATEREPLY,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.TaskStateReply)
    },
)
_sym_db.RegisterMessage(TaskStateReply)

DataboxReplyINT32 = _reflection.GeneratedProtocolMessageType(
    "DataboxReplyINT32",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATABOXREPLYINT32,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.DataboxReplyINT32)
    },
)
_sym_db.RegisterMessage(DataboxReplyINT32)

DataboxReplyUINT32 = _reflection.GeneratedProtocolMessageType(
    "DataboxReplyUINT32",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATABOXREPLYUINT32,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.DataboxReplyUINT32)
    },
)
_sym_db.RegisterMessage(DataboxReplyUINT32)

DataboxReplyINT64 = _reflection.GeneratedProtocolMessageType(
    "DataboxReplyINT64",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATABOXREPLYINT64,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.DataboxReplyINT64)
    },
)
_sym_db.RegisterMessage(DataboxReplyINT64)

DataboxReplyUINT64 = _reflection.GeneratedProtocolMessageType(
    "DataboxReplyUINT64",
    (_message.Message,),
    {
        "DESCRIPTOR": _DATABOXREPLYUINT64,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.DataboxReplyUINT64)
    },
)
_sym_db.RegisterMessage(DataboxReplyUINT64)

GetTaskErrorMessagesReply = _reflection.GeneratedProtocolMessageType(
    "GetTaskErrorMessagesReply",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETTASKERRORMESSAGESREPLY,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.GetTaskErrorMessagesReply)
    },
)
_sym_db.RegisterMessage(GetTaskErrorMessagesReply)

ParameterRequest = _reflection.GeneratedProtocolMessageType(
    "ParameterRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _PARAMETERREQUEST,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.ParameterRequest)
    },
)
_sym_db.RegisterMessage(ParameterRequest)

StartTaskRequest = _reflection.GeneratedProtocolMessageType(
    "StartTaskRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STARTTASKREQUEST,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.StartTaskRequest)
    },
)
_sym_db.RegisterMessage(StartTaskRequest)

StopTaskRequest = _reflection.GeneratedProtocolMessageType(
    "StopTaskRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _STOPTASKREQUEST,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.StopTaskRequest)
    },
)
_sym_db.RegisterMessage(StopTaskRequest)

ProgramTaskRequest = _reflection.GeneratedProtocolMessageType(
    "ProgramTaskRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _PROGRAMTASKREQUEST,
        "__module__": "taskrunner_pb2"
        # @@protoc_insertion_point(class_scope:taskrunner.ProgramTaskRequest)
    },
)
_sym_db.RegisterMessage(ProgramTaskRequest)

_TASKRUNNERSERVICE = DESCRIPTOR.services_by_name["TaskRunnerService"]
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _EMPTY._serialized_start = 32
    _EMPTY._serialized_end = 39
    _STATUSREPLY._serialized_start = 42
    _STATUSREPLY._serialized_end = 228
    _TASKSTATEREPLY._serialized_start = 231
    _TASKSTATEREPLY._serialized_end = 367
    _DATABOXREPLYINT32._serialized_start = 369
    _DATABOXREPLYINT32._serialized_end = 417
    _DATABOXREPLYUINT32._serialized_start = 419
    _DATABOXREPLYUINT32._serialized_end = 468
    _DATABOXREPLYINT64._serialized_start = 470
    _DATABOXREPLYINT64._serialized_end = 518
    _DATABOXREPLYUINT64._serialized_start = 520
    _DATABOXREPLYUINT64._serialized_end = 569
    _GETTASKERRORMESSAGESREPLY._serialized_start = 571
    _GETTASKERRORMESSAGESREPLY._serialized_end = 615
    _PARAMETERREQUEST._serialized_start = 617
    _PARAMETERREQUEST._serialized_end = 655
    _STARTTASKREQUEST._serialized_start = 657
    _STARTTASKREQUEST._serialized_end = 714
    _STOPTASKREQUEST._serialized_start = 716
    _STOPTASKREQUEST._serialized_end = 748
    _PROGRAMTASKREQUEST._serialized_start = 750
    _PROGRAMTASKREQUEST._serialized_end = 798
    _TASKRUNNERSERVICE._serialized_start = 801
    _TASKRUNNERSERVICE._serialized_end = 2033
# @@protoc_insertion_point(module_scope)
