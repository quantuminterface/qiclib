# -*- coding: utf-8 -*-
# CopyrightÂ© 2017-2023 Quantum Interface (quantuminterface@ipe.kit.edu)
# Richard Gebauer, IPE, Karlsruhe Institute of Technology
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pulsegen.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0epulsegen.proto\x12\x08pulsegen" \n\x0fTriggerSetIndex\x12\r\n\x05value\x18\x01 \x01(\r"\x1e\n\rEndpointIndex\x12\r\n\x05value\x18\x01 \x01(\r"^\n\x08IndexSet\x12\'\n\x06\x63index\x18\x01 \x01(\x0b\x32\x17.pulsegen.EndpointIndex\x12)\n\x06tindex\x18\x02 \x01(\x0b\x32\x19.pulsegen.TriggerSetIndex"C\n\tFrequency\x12\'\n\x06\x63index\x18\x01 \x01(\x0b\x32\x17.pulsegen.EndpointIndex\x12\r\n\x05value\x18\x02 \x01(\x01"c\n\x14\x41mplitudeCalibration\x12\'\n\x06\x63index\x18\x01 \x01(\x0b\x32\x17.pulsegen.EndpointIndex\x12\x10\n\x08i_factor\x18\x02 \x01(\x01\x12\x10\n\x08q_factor\x18\x03 \x01(\x01"?\n\x0bPhaseOffset\x12!\n\x05index\x18\x01 \x01(\x0b\x32\x12.pulsegen.IndexSet\x12\r\n\x05value\x18\x02 \x01(\x01"<\n\x08\x44uration\x12!\n\x05index\x18\x01 \x01(\x0b\x32\x12.pulsegen.IndexSet\x12\r\n\x05value\x18\x02 \x01(\x01";\n\x07\x41\x64\x64ress\x12!\n\x05index\x18\x01 \x01(\x0b\x32\x12.pulsegen.IndexSet\x12\r\n\x05value\x18\x02 \x01(\r"\x82\x01\n\x05Pulse\x12!\n\x05index\x18\x01 \x01(\x0b\x32\x12.pulsegen.IndexSet\x12\t\n\x01i\x18\x02 \x03(\x01\x12\t\n\x01q\x18\x03 \x03(\x01\x12\r\n\x05phase\x18\x04 \x01(\x01\x12\x0e\n\x06offset\x18\x05 \x01(\x01\x12\x0c\n\x04hold\x18\x06 \x01(\x08\x12\x13\n\x0bshift_phase\x18\x07 \x01(\x08"I\n\x0bStatusFlags\x12&\n\x05index\x18\x01 \x01(\x0b\x32\x17.pulsegen.EndpointIndex\x12\x12\n\nsaturation\x18\x02 \x01(\x08"\x07\n\x05\x45mpty2\xb6\t\n\x0fPulseGenService\x12\x41\n\x0fGetNCOFrequency\x12\x17.pulsegen.EndpointIndex\x1a\x13.pulsegen.Frequency"\x00\x12\x39\n\x0fSetNCOFrequency\x12\x13.pulsegen.Frequency\x1a\x0f.pulsegen.Empty"\x00\x12\x33\n\x05Reset\x12\x17.pulsegen.EndpointIndex\x1a\x0f.pulsegen.Empty"\x00\x12\x41\n\x13ResetEnvelopeMemory\x12\x17.pulsegen.EndpointIndex\x1a\x0f.pulsegen.Empty"\x00\x12T\n\x17GetAmplitudeCalibration\x12\x17.pulsegen.EndpointIndex\x1a\x1e.pulsegen.AmplitudeCalibration"\x00\x12L\n\x17SetAmplitudeCalibration\x12\x1e.pulsegen.AmplitudeCalibration\x1a\x0f.pulsegen.Empty"\x00\x12=\n\x0eGetPhaseOffset\x12\x12.pulsegen.IndexSet\x1a\x15.pulsegen.PhaseOffset"\x00\x12:\n\x0eSetPhaseOffset\x12\x15.pulsegen.PhaseOffset\x1a\x0f.pulsegen.Empty"\x00\x12\x42\n\x0eGetGlobalPhase\x12\x17.pulsegen.EndpointIndex\x1a\x15.pulsegen.PhaseOffset"\x00\x12\x37\n\x0bGetDuration\x12\x12.pulsegen.IndexSet\x1a\x12.pulsegen.Duration"\x00\x12\x34\n\x0bSetDuration\x12\x12.pulsegen.Duration\x1a\x0f.pulsegen.Empty"\x00\x12;\n\x10GetStartAddressI\x12\x12.pulsegen.IndexSet\x1a\x11.pulsegen.Address"\x00\x12\x38\n\x10SetStartAddressI\x12\x11.pulsegen.Address\x1a\x0f.pulsegen.Empty"\x00\x12;\n\x10GetStartAddressQ\x12\x12.pulsegen.IndexSet\x1a\x11.pulsegen.Address"\x00\x12\x38\n\x10SetStartAddressQ\x12\x11.pulsegen.Address\x1a\x0f.pulsegen.Empty"\x00\x12\x38\n\x0fTriggerManually\x12\x12.pulsegen.IndexSet\x1a\x0f.pulsegen.Empty"\x00\x12/\n\tLoadPulse\x12\x0f.pulsegen.Pulse\x1a\x0f.pulsegen.Empty"\x00\x12\x42\n\x0eGetStatusFlags\x12\x17.pulsegen.EndpointIndex\x1a\x15.pulsegen.StatusFlags"\x00\x12>\n\x10ResetStatusFlags\x12\x17.pulsegen.EndpointIndex\x1a\x0f.pulsegen.Empty"\x00\x62\x06proto3'
)


_TRIGGERSETINDEX = DESCRIPTOR.message_types_by_name["TriggerSetIndex"]
_ENDPOINTINDEX = DESCRIPTOR.message_types_by_name["EndpointIndex"]
_INDEXSET = DESCRIPTOR.message_types_by_name["IndexSet"]
_FREQUENCY = DESCRIPTOR.message_types_by_name["Frequency"]
_AMPLITUDECALIBRATION = DESCRIPTOR.message_types_by_name["AmplitudeCalibration"]
_PHASEOFFSET = DESCRIPTOR.message_types_by_name["PhaseOffset"]
_DURATION = DESCRIPTOR.message_types_by_name["Duration"]
_ADDRESS = DESCRIPTOR.message_types_by_name["Address"]
_PULSE = DESCRIPTOR.message_types_by_name["Pulse"]
_STATUSFLAGS = DESCRIPTOR.message_types_by_name["StatusFlags"]
_EMPTY = DESCRIPTOR.message_types_by_name["Empty"]
TriggerSetIndex = _reflection.GeneratedProtocolMessageType(
    "TriggerSetIndex",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRIGGERSETINDEX,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.TriggerSetIndex)
    },
)
_sym_db.RegisterMessage(TriggerSetIndex)

EndpointIndex = _reflection.GeneratedProtocolMessageType(
    "EndpointIndex",
    (_message.Message,),
    {
        "DESCRIPTOR": _ENDPOINTINDEX,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.EndpointIndex)
    },
)
_sym_db.RegisterMessage(EndpointIndex)

IndexSet = _reflection.GeneratedProtocolMessageType(
    "IndexSet",
    (_message.Message,),
    {
        "DESCRIPTOR": _INDEXSET,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.IndexSet)
    },
)
_sym_db.RegisterMessage(IndexSet)

Frequency = _reflection.GeneratedProtocolMessageType(
    "Frequency",
    (_message.Message,),
    {
        "DESCRIPTOR": _FREQUENCY,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.Frequency)
    },
)
_sym_db.RegisterMessage(Frequency)

AmplitudeCalibration = _reflection.GeneratedProtocolMessageType(
    "AmplitudeCalibration",
    (_message.Message,),
    {
        "DESCRIPTOR": _AMPLITUDECALIBRATION,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.AmplitudeCalibration)
    },
)
_sym_db.RegisterMessage(AmplitudeCalibration)

PhaseOffset = _reflection.GeneratedProtocolMessageType(
    "PhaseOffset",
    (_message.Message,),
    {
        "DESCRIPTOR": _PHASEOFFSET,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.PhaseOffset)
    },
)
_sym_db.RegisterMessage(PhaseOffset)

Duration = _reflection.GeneratedProtocolMessageType(
    "Duration",
    (_message.Message,),
    {
        "DESCRIPTOR": _DURATION,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.Duration)
    },
)
_sym_db.RegisterMessage(Duration)

Address = _reflection.GeneratedProtocolMessageType(
    "Address",
    (_message.Message,),
    {
        "DESCRIPTOR": _ADDRESS,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.Address)
    },
)
_sym_db.RegisterMessage(Address)

Pulse = _reflection.GeneratedProtocolMessageType(
    "Pulse",
    (_message.Message,),
    {
        "DESCRIPTOR": _PULSE,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.Pulse)
    },
)
_sym_db.RegisterMessage(Pulse)

StatusFlags = _reflection.GeneratedProtocolMessageType(
    "StatusFlags",
    (_message.Message,),
    {
        "DESCRIPTOR": _STATUSFLAGS,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.StatusFlags)
    },
)
_sym_db.RegisterMessage(StatusFlags)

Empty = _reflection.GeneratedProtocolMessageType(
    "Empty",
    (_message.Message,),
    {
        "DESCRIPTOR": _EMPTY,
        "__module__": "pulsegen_pb2"
        # @@protoc_insertion_point(class_scope:pulsegen.Empty)
    },
)
_sym_db.RegisterMessage(Empty)

_PULSEGENSERVICE = DESCRIPTOR.services_by_name["PulseGenService"]
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _TRIGGERSETINDEX._serialized_start = 28
    _TRIGGERSETINDEX._serialized_end = 60
    _ENDPOINTINDEX._serialized_start = 62
    _ENDPOINTINDEX._serialized_end = 92
    _INDEXSET._serialized_start = 94
    _INDEXSET._serialized_end = 188
    _FREQUENCY._serialized_start = 190
    _FREQUENCY._serialized_end = 257
    _AMPLITUDECALIBRATION._serialized_start = 259
    _AMPLITUDECALIBRATION._serialized_end = 358
    _PHASEOFFSET._serialized_start = 360
    _PHASEOFFSET._serialized_end = 423
    _DURATION._serialized_start = 425
    _DURATION._serialized_end = 485
    _ADDRESS._serialized_start = 487
    _ADDRESS._serialized_end = 546
    _PULSE._serialized_start = 549
    _PULSE._serialized_end = 679
    _STATUSFLAGS._serialized_start = 681
    _STATUSFLAGS._serialized_end = 754
    _EMPTY._serialized_start = 756
    _EMPTY._serialized_end = 763
    _PULSEGENSERVICE._serialized_start = 766
    _PULSEGENSERVICE._serialized_end = 1972
# @@protoc_insertion_point(module_scope)
